From 3e8e588b2825aa25dca772df1611cd0b96f8227d Mon Sep 17 00:00:00 2001
From: khaled-zbidat <zbidatkhaled@gmail.com>
Date: Wed, 28 May 2025 14:04:56 +0300
Subject: [PATCH] updating main so we can weok clean

---
 .github/workflows/Dev_deploy.yaml  |  8 ++--
 .github/workflows/Prod_deploy.yaml |  5 +-
 polybot/bot.py                     |  3 +-
 polybot/start.sh                   | 45 -----------------
 polybot/start_dev.sh               | 71 +++++++++++++++++++++++++++
 polybot/start_prod.sh              | 77 ++++++++++++++++++++++++++++++
 6 files changed, 157 insertions(+), 52 deletions(-)
 delete mode 100644 polybot/start.sh
 create mode 100644 polybot/start_dev.sh
 create mode 100644 polybot/start_prod.sh

diff --git a/.github/workflows/Dev_deploy.yaml b/.github/workflows/Dev_deploy.yaml
index 0389ffb..8bf7d2d 100644
--- a/.github/workflows/Dev_deploy.yaml
+++ b/.github/workflows/Dev_deploy.yaml
@@ -20,7 +20,7 @@ jobs:
       - name: Configure SSH
         env:
           SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
-          EC2_HOST: ${{ secrets.DEV_EC2_HOST }}
+          EC2_HOST: ${{ secrets.DEV_EC2_HOST}}
           EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
         run: |
           mkdir -p ~/.ssh
@@ -46,7 +46,7 @@ jobs:
         run: |
           ssh ec2 "
             cd ~/${REPO_NAME}/polybot &&
-            chmod +x start.sh &&
-            bash start.sh ~/${REPO_NAME} ${{secrets.TELEGRAM_TOKEN}}
+            chmod +x start_prod.sh &&
+            bash start_dev.sh ~/${REPO_NAME} ${{ secrets.TELEGRAM_TOKEN }} ${{ secrets.YOLO_URL_DEV }}  
           "
-
+        
\ No newline at end of file
diff --git a/.github/workflows/Prod_deploy.yaml b/.github/workflows/Prod_deploy.yaml
index 338ce84..18a4973 100644
--- a/.github/workflows/Prod_deploy.yaml
+++ b/.github/workflows/Prod_deploy.yaml
@@ -46,7 +46,8 @@ jobs:
         run: |
           ssh ec2 "
             cd ~/${REPO_NAME}/polybot &&
-            chmod +x start.sh &&
-            bash start.sh ~/${REPO_NAME} ${{secrets.TELEGRAM_TOKEN}}
+            chmod +x start_prod.sh &&
+            bash start_prod.sh ~/${REPO_NAME} ${{ secrets.TELEGRAM_TOKEN }} ${{ secrets.YOLO_URL_PROD }}
           "
+        
 
diff --git a/polybot/bot.py b/polybot/bot.py
index 04f2303..0a7524a 100644
--- a/polybot/bot.py
+++ b/polybot/bot.py
@@ -62,7 +62,8 @@ class ImageProcessingBot(Bot):
 
     def send_to_yolo_service(self, image_path):
         try:
-            url = "http://10.0.1.187:8667/predict"
+            yolo_url = os.getenv("YOLO_SERVICE_URL")
+            url = yolo_ur
             with open(image_path, 'rb') as img_file:
                 files = {'file': img_file}
                 response = requests.post(url, files=files, timeout=5)
diff --git a/polybot/start.sh b/polybot/start.sh
deleted file mode 100644
index b896513..0000000
--- a/polybot/start.sh
+++ /dev/null
@@ -1,45 +0,0 @@
-#!/bin/bash
-#exec > /home/ubuntu/TelegramPhotoBot/polybot/bot.log 2>&1
-set -x
-#name khaled
-# Load environment variables from your actual env file
-set -a
-source /etc/telegram_bot_env
-set +a
-#just chekcing
-SERVICE_NAME="telegrambot"
-# Activate virtual environment n
-source /home/ubuntu/TelegramPhotoBot/venv/bin/activate
-
-# Start ngrok if not running
-NGROK_PID=$(pgrep -f 'ngrok http 8443')
-if [ -z "$NGROK_PID" ]; then
-    echo "Starting ngrok on port 8443..."
-    nohup ngrok http 8443 > /dev/null 2>&1 &
-    sleep 3
-else
-    echo "ngrok already running (PID $NGROK_PID)"
-fi
-
-# Get the ngrok public HTTPS URL
-NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[] | select(.proto == "https") | .public_url')
-echo "Ngrok public URL: $NGROK_URL"
-
-# Update /etc/telegram_bot_env with new BOT_APP_URL
-sudo sed -i '/^BOT_APP_URL=/d' /etc/telegram_bot_env
-echo "BOT_APP_URL=$NGROK_URL" | sudo tee -a /etc/telegram_bot_env
-
-# Reload updated environment
-set -a
-source /etc/telegram_bot_env
-set +a
-
-# Optionally update the Telegram webhook
-curl -s -F "url=${BOT_APP_URL}/${TELEGRAM_BOT_TOKEN}/" \
-     https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook
-
-echo "Starting bot..."
-python3 -m polybot.app
-
-echo "Restarting bot service..."
-sudo systemctl restart $SERVICE_NAME
\ No newline at end of file
diff --git a/polybot/start_dev.sh b/polybot/start_dev.sh
new file mode 100644
index 0000000..26a981e
--- /dev/null
+++ b/polybot/start_dev.sh
@@ -0,0 +1,71 @@
+#!/bin/bash
+#exec > /home/ubuntu/TelegramPhotoBot/polybot/bot.log 2>&1
+set -x
+
+# Load environment variables
+set -a
+source /etc/telegram_bot_env
+set +a
+
+SERVICE_NAME="telegrambot"
+SERVICE_FILE="/etc/systemd/system/${SERVICE_NAME}.service"
+
+# Activate virtual environment
+source /home/ubuntu/TelegramPhotoBot/venv/bin/activate
+
+# Ensure the systemd service exists
+if [ ! -f "$SERVICE_FILE" ]; then
+    echo "Creating systemd service: $SERVICE_NAME"
+    sudo tee "$SERVICE_FILE" > /dev/null <<EOF
+[Unit]
+Description=Telegram Photo Bot
+After=network.target
+
+[Service]
+ExecStart=/home/ubuntu/TelegramPhotoBot/polybot/start.sh
+WorkingDirectory=/home/ubuntu/TelegramPhotoBot
+Restart=always
+User=ubuntu
+EnvironmentFile=/etc/telegram_bot_env
+
+[Install]
+WantedBy=multi-user.target
+EOF
+
+    sudo systemctl daemon-reload
+    sudo systemctl enable $SERVICE_NAME
+    echo "✅ Systemd service $SERVICE_NAME created and enabled"
+else
+    echo "✅ Systemd service $SERVICE_NAME already exists"
+fi
+
+# Start ngrok if not running
+NGROK_PID=$(pgrep -f 'ngrok http 8443')
+if [ -z "$NGROK_PID" ]; then
+    echo "Starting ngrok on port 8443..."
+    nohup ngrok http 8443 > /dev/null 2>&1 &
+    sleep 3
+else
+    echo "ngrok already running (PID $NGROK_PID)"
+fi
+
+# Get ngrok public HTTPS URL
+NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[] | select(.proto == "https") | .public_url')
+echo "Ngrok public URL: $NGROK_URL"
+
+# Update BOT_APP_URL in the env file
+sudo sed -i '/^BOT_APP_URL=/d' /etc/telegram_bot_env
+echo "BOT_APP_URL=$NGROK_URL" | sudo tee -a /etc/telegram_bot_env
+
+# Reload updated env vars
+set -a
+source /etc/telegram_bot_env
+set +a
+
+# Set webhook
+curl -s -F "url=${BOT_APP_URL}/${TELEGRAM_BOT_TOKEN}/" \
+     https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook
+
+# Restart the service to apply changes
+echo "Restarting bot service..."
+sudo systemctl restart $SERVICE_NAME
diff --git a/polybot/start_prod.sh b/polybot/start_prod.sh
new file mode 100644
index 0000000..634c92b
--- /dev/null
+++ b/polybot/start_prod.sh
@@ -0,0 +1,77 @@
+#!/bin/bash
+set -x
+
+# Parse args
+REPO_DIR="$1"
+TELEGRAM_TOKEN="$2"
+YOLO_URL="$3"
+
+# Fail fast if required envs are missing
+if [[ -z "$TELEGRAM_TOKEN" || -z "$YOLO_URL" ]]; then
+    echo "❌ TELEGRAM_TOKEN and YOLO_URL are required."
+    exit 1
+fi
+
+SERVICE_NAME="telegrambot"
+SERVICE_FILE="/etc/systemd/system/${SERVICE_NAME}.service"
+ENV_FILE="${REPO_DIR}/polybot/.runtime_env"
+
+# Generate runtime env file
+cat > "$ENV_FILE" <<EOF
+TELEGRAM_BOT_TOKEN=${TELEGRAM_TOKEN}
+YOLO_SERVICE_URL=${YOLO_URL}
+EOF
+
+# Start ngrok if not running
+NGROK_PID=$(pgrep -f 'ngrok http 8443')
+if [ -z "$NGROK_PID" ]; then
+    echo "Starting ngrok on port 8443..."
+    nohup ngrok http 8443 > /dev/null 2>&1 &
+    sleep 3
+else
+    echo "ngrok already running (PID $NGROK_PID)"
+fi
+
+# Get ngrok public HTTPS URL
+NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[] | select(.proto == "https") | .public_url')
+echo "Ngrok public URL: $NGROK_URL"
+echo "BOT_APP_URL=$NGROK_URL" >> "$ENV_FILE"
+
+# Load env vars into current session
+set -a
+source "$ENV_FILE"
+set +a
+
+# Activate virtual environment
+source /home/ubuntu/TelegramPhotoBot/venv/bin/activate
+
+# Create systemd service if not already present
+if [ ! -f "$SERVICE_FILE" ]; then
+    echo "Creating systemd service: $SERVICE_NAME"
+    sudo tee "$SERVICE_FILE" > /dev/null <<EOF
+[Unit]
+Description=Telegram Photo Bot
+After=network.target
+
+[Service]
+ExecStart=/home/ubuntu/TelegramPhotoBot/polybot/start.sh
+WorkingDirectory=/home/ubuntu/TelegramPhotoBot
+Restart=always
+User=ubuntu
+EnvironmentFile=${ENV_FILE}
+
+[Install]
+WantedBy=multi-user.target
+EOF
+
+    sudo systemctl daemon-reload
+    sudo systemctl enable $SERVICE_NAME
+fi
+
+# Set webhook
+curl -s -F "url=${BOT_APP_URL}/${TELEGRAM_BOT_TOKEN}/" \
+     https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook
+
+# Restart service
+echo "Restarting bot service..."
+sudo systemctl restart $SERVICE_NAME
-- 
2.39.3 (Apple Git-146)

