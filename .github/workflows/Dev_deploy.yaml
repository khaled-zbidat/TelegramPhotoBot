name: PolyBot Deploy

on:
  push:
    branches:
      - 'dev'
  workflow_dispatch:

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.DEV_EC2_HOST}}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config << EOF
          Host ec2
            HostName $EC2_HOST
            User $EC2_USERNAME
            IdentityFile ~/.ssh/private_key
            StrictHostKeyChecking no
          EOF

      - name: Copy and checkout `dev` branch to EC2
        run: |
          ssh ec2 "
            if [ -d ~/${REPO_NAME} ]; then
              cd ~/${REPO_NAME} &&
              git fetch origin &&
              git stash &&
              git checkout dev &&
              git pull origin dev &&
              echo '✅ Checked out and updated dev branch' &&
              echo '📌 Current branch:' &&
              git branch --show-current &&
              git log -1 --oneline
            else
              git clone --branch dev ${REPO_URL} ~/${REPO_NAME} &&
              echo '✅ Cloned dev branch' &&
              cd ~/${REPO_NAME} &&
              echo '📌 Current branch:' &&
              git branch --show-current &&
              git log -1 --oneline
            fi
          "

      - name: Install system dependencies on EC2
        run: |
          ssh ec2 "
            echo '🔧 Installing system dependencies...'
            sudo apt update
            sudo apt install -y python3 python3-pip python3-venv curl jq
            echo '✅ System dependencies installed'
          "

      - name: Setup Python virtual environment on EC2
        run: |
          ssh ec2 "
            cd ~/${REPO_NAME}
            if [ ! -d 'venv' ]; then
              echo '🐍 Creating Python virtual environment...'
              python3 -m venv venv
              source venv/bin/activate
              if [ -f 'requirements.txt' ]; then
                pip install -r requirements.txt
                echo '✅ Dependencies installed'
              else
                echo '⚠️ No requirements.txt found'
              fi
            else
              echo '✅ Virtual environment already exists'
            fi
          "

      - name: Debug pulled repo structure on EC2
        run: |
          ssh ec2 "
            echo '🧾 Current working directory:'
            pwd

            echo '📂 Listing contents of ~/${REPO_NAME}/polybot:'
            ls -al ~/${REPO_NAME}/polybot

            echo '📄 Listing all files recursively:'
            find ~/${REPO_NAME} -type f
          "

      - name: Execute deployment script on EC2
        run: |
          ssh ec2 "
            cd ~/${REPO_NAME}/polybot &&
            chmod +x start_dev.sh &&
            bash start_dev.sh ~/${REPO_NAME} ${{secrets.TELEGRAM_TOKEN}} ${{secrets.YOLO_URL_DEV}} ${{secrets.YOUR_NGROK_TOKEN}}
          "