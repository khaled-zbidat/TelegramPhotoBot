name: PolyBot Deploy

on:
  push:
    branches:
      - 'dev'
  workflow_dispatch:

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.DEV_EC2_HOST}}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config << EOF
          Host ec2
            HostName $EC2_HOST
            User $EC2_USERNAME
            IdentityFile ~/.ssh/private_key
            StrictHostKeyChecking no
          EOF

      - name: Copy and checkout `dev` branch to EC2
        run: |
          ssh ec2 "
            if [ -d ~/${REPO_NAME} ]; then
              cd ~/${REPO_NAME} &&
              git fetch origin &&
              git stash &&
              git checkout dev &&
              git pull origin dev &&
              echo '‚úÖ Checked out and updated dev branch' &&
              echo 'üìå Current branch:' &&
              git branch --show-current &&
              git log -1 --oneline
            else
              git clone --branch dev ${REPO_URL} ~/${REPO_NAME} &&
              echo '‚úÖ Cloned dev branch' &&
              cd ~/${REPO_NAME} &&
              echo 'üìå Current branch:' &&
              git branch --show-current &&
              git log -1 --oneline
            fi
          "

      - name: Install system dependencies on EC2
        run: |
          ssh ec2 "
            echo 'üîß Installing system dependencies...'
            sudo apt update
            sudo apt install -y python3 python3-pip python3-venv curl jq net-tools systemd
            echo '‚úÖ System dependencies installed'
          "

      - name: Setup Python virtual environment and install dependencies
        run: |
          ssh ec2 "
            cd ~/${REPO_NAME}
            
            # Create or update virtual environment
            if [ ! -d 'venv' ]; then
              echo 'üêç Creating Python virtual environment...'
              python3 -m venv venv
            fi
            
            # Activate virtual environment
            source venv/bin/activate
            
            # Upgrade pip
            pip install --upgrade pip
            
            # Install dependencies
            if [ -f 'requirements.txt' ]; then
              echo 'üì¶ Installing from requirements.txt...'
              pip install -r requirements.txt
            else
              echo 'üì¶ Installing essential packages...'
              pip install flask requests pillow python-telegram-bot python-dotenv
              echo 'üìù Creating requirements.txt...'
              pip freeze > requirements.txt
            fi
            
            echo '‚úÖ Python environment setup complete'
            
            # Verify installations
            echo 'üß™ Verifying key imports...'
            python3 -c 'import flask; import requests; print(\"‚úÖ Essential packages verified\")'
          "

      - name: Create service setup script
        run: |
          ssh ec2 "
            cd ~/${REPO_NAME}/polybot
            cat > setup_service.sh << 'SETUP_EOF'
          #!/bin/bash
          set -e

          # Get the repository directory
          REPO_DIR=\"\${1:-/home/ubuntu/TelegramPhotoBot}\"
          SERVICE_NAME=\"telegrambot\"
          SERVICE_FILE=\"/etc/systemd/system/\${SERVICE_NAME}.service\"
          ENV_FILE=\"\${REPO_DIR}/polybot/.runtime_env\"

          echo \"üõ†Ô∏è Setting up systemd service for Telegram Bot\"
          echo \"Repository: \$REPO_DIR\"
          echo \"Environment file: \$ENV_FILE\"

          # Verify paths exist
          if [[ ! -d \"\$REPO_DIR\" ]]; then
              echo \"‚ùå Repository directory not found: \$REPO_DIR\"
              exit 1
          fi

          if [[ ! -f \"\$REPO_DIR/polybot/app.py\" ]]; then
              echo \"‚ùå Bot application not found: \$REPO_DIR/polybot/app.py\"
              exit 1
          fi

          # Check if virtual environment exists
          VENV_PYTHON=\"\$REPO_DIR/venv/bin/python3\"
          if [[ ! -f \"\$VENV_PYTHON\" ]]; then
              echo \"‚ùå Virtual environment Python not found: \$VENV_PYTHON\"
              echo \"Please ensure the virtual environment is properly set up\"
              exit 1
          fi

          # Test if Flask is available in the venv
          echo \"üß™ Testing Flask import in virtual environment...\"
          if ! \"\$VENV_PYTHON\" -c \"import flask; print('‚úÖ Flask found in venv')\" 2>/dev/null; then
              echo \"‚ùå Flask not found in virtual environment\"
              echo \"Installing Flask and dependencies...\"
              \"\$REPO_DIR/venv/bin/pip\" install flask requests pillow python-telegram-bot python-dotenv
          fi

          # Create the systemd service file
          echo \"üìù Creating systemd service file...\"
          sudo tee \"\$SERVICE_FILE\" > /dev/null <<EOF
          [Unit]
          Description=Telegram Photo Bot
          After=network.target
          Wants=network-online.target

          [Service]
          Type=simple
          ExecStart=\$VENV_PYTHON \$REPO_DIR/polybot/app.py
          WorkingDirectory=\$REPO_DIR/polybot
          Restart=always
          RestartSec=10
          User=ubuntu
          Group=ubuntu
          EnvironmentFile=\$ENV_FILE

          # Logging
          StandardOutput=journal
          StandardError=journal
          SyslogIdentifier=telegrambot

          # Security settings
          NoNewPrivileges=true
          PrivateTmp=true

          [Install]
          WantedBy=multi-user.target
          EOF

          echo \"‚úÖ Systemd service file created\"

          # Set proper permissions on the service file
          sudo chmod 644 \"\$SERVICE_FILE\"

          # Reload systemd and enable the service
          echo \"üîÑ Reloading systemd daemon...\"
          sudo systemctl daemon-reload

          echo \"üöÄ Enabling service...\"
          sudo systemctl enable \$SERVICE_NAME

          echo \"‚úÖ Service \$SERVICE_NAME has been set up and enabled\"
          SETUP_EOF
          
          chmod +x setup_service.sh
          echo '‚úÖ Service setup script created'
          "

      - name: Debug pulled repo structure on EC2
        run: |
          ssh ec2 "
            echo 'üßæ Current working directory:'
            pwd

            echo 'üìÇ Listing contents of ~/${REPO_NAME}/polybot:'
            ls -al ~/${REPO_NAME}/polybot

            echo 'üìÑ Checking if requirements.txt exists:'
            ls -al ~/${REPO_NAME}/requirements.txt 2>/dev/null || echo 'requirements.txt not found'
            
            echo 'üêç Checking virtual environment:'
            ls -al ~/${REPO_NAME}/venv/bin/python3 2>/dev/null && echo '‚úÖ Virtual environment found' || echo '‚ùå Virtual environment missing'
          "

      - name: Execute deployment script on EC2
        run: |
          ssh ec2 "
            cd ~/${REPO_NAME}/polybot &&
            chmod +x start_dev.sh &&
            bash start_dev.sh ~/${REPO_NAME} ${{secrets.TELEGRAM_TOKEN}} ${{secrets.YOLO_URL_DEV}} ${{secrets.YOUR_NGROK_TOKEN}}
          "