name: PolyBot Dev Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.PROD_EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config << EOF
          Host ec2
              HostName $EC2_HOST
              User $EC2_USERNAME
              IdentityFile ~/.ssh/private_key
              StrictHostKeyChecking no
          EOF

      - name: Copy and checkout main branch to EC2
        run: |
          ssh ec2 "
            if [ -d ~/${REPO_NAME} ]; then
              cd ~/${REPO_NAME} && git checkout main && git reset --hard && git clean -fd && git pull origin main;
            else
              git clone -b main ${REPO_URL} ~/${REPO_NAME};
            fi"


      - name: Execute deployment script on EC2
        run: |
          ssh ec2 "
            sudo apt update
            sudo apt install -y python3.12 python3.12-venv curl jq

            cd ~/${REPO_NAME} && \
            bash deploy_prod.sh ~/${REPO_NAME} "${{ secrets.PROD_TELEGRAM_TOKEN }}" "${{ secrets.YOLO_URL_PROD }}" "${{ secrets.AWS_ACCESS_KEY_ID }}" "${{ secrets.AWS_SECRET_ACCESS_KEY }}" "${{ secrets.S3_BUCKET_NAME }}" "${{ secrets.AWS_REGION }}"
          "
